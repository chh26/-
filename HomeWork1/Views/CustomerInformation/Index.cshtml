@using PagedList.Mvc;
@using PagedList;
@model IPagedList<HomeWork1.Models.客戶資料>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @using (Html.BeginForm())
    {
        <table>
            <tr>
                <td style="white-space:nowrap;"　style="width:15%">
                    @Html.ActionLink("Create New", "Create") 
                </td>
                <td >｜</td>
                <td style="white-space:nowrap">
                    客戶分類:
                </td>
                <td>
                    @Html.DropDownList("custCategory", null, "全部", htmlAttributes: new { @class = "form-control" })
                </td>
                <td>｜</td>
                <td >
                    <input type="text" name="param" id="keyword" class="form-control" value="@TempData["param"]"/>
                </td>
                <td >
                    <input type="submit" value="搜尋" class="btn btn-default" formaction="@Url.Action("Index")"  />
                </td>
                <td>｜</td>
                <td >
                    <input type="submit"  value="匯出資訊" class="btn btn-default" formaction="@Url.Action("GetExcelFile")"/>
                    <button id="btnExport" hidden="hidden">匯出資訊</button>
                    @Html.Hidden("hidparam", TempData["param"])
                    @Html.Hidden("hidcustCategory", TempData["custCategory"])
                </td>
            </tr>
        </table>
    }

</p>
<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.客戶名稱)*@
            @Html.ActionLink("客戶名稱", "Sort", new { columnName = "客戶名稱", sort = TempData["nextSort"] , sortColumn = TempData["sortColumn"] , keyword = TempData["param"] , CategoryId = TempData["custCategory"], page = TempData["currentPage"] })
            @if (TempData["sortColumn"] != null && TempData["sortColumn"].ToString() == "客戶名稱")
            {
                @ViewBag.sortTag
            }
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.統一編號)*@
            @Html.ActionLink("統一編號", "Sort", new { columnName = "統一編號", sort = TempData["nextSort"], sortColumn = TempData["sortColumn"], keyword = TempData["param"], CategoryId = TempData["custCategory"], page = TempData["currentPage"] })
            @if (TempData["sortColumn"] != null && TempData["sortColumn"].ToString() == "統一編號")
            {
                @ViewBag.sortTag
            }
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.電話)*@
            @Html.ActionLink("電話", "Sort", new { columnName = "電話", sort = TempData["nextSort"], sortColumn = TempData["sortColumn"], keyword = TempData["param"], CategoryId = TempData["custCategory"], page = TempData["currentPage"] })
            @if (TempData["sortColumn"] != null && TempData["sortColumn"].ToString() == "電話")
            {
                @ViewBag.sortTag
            }
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.傳真)*@
            @Html.ActionLink("傳真", "Sort", new { columnName = "傳真", sort = TempData["nextSort"], sortColumn = TempData["sortColumn"], keyword = TempData["param"], CategoryId = TempData["custCategory"], page = TempData["currentPage"] })
            @if (TempData["sortColumn"] != null && TempData["sortColumn"].ToString() == "傳真")
            {
                @ViewBag.sortTag
            }
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.地址)*@
            @Html.ActionLink("地址", "Sort", new { columnName = "地址", sort = TempData["nextSort"], sortColumn = TempData["sortColumn"], keyword = TempData["param"], CategoryId = TempData["custCategory"], page = TempData["currentPage"] })
            @if (TempData["sortColumn"] != null && TempData["sortColumn"].ToString() == "地址")
            {
                @ViewBag.sortTag
            } 
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Email)*@
            @Html.ActionLink("Email", "Sort", new { columnName = "Email", sort = TempData["nextSort"], sortColumn = TempData["sortColumn"], keyword = TempData["param"], CategoryId = TempData["custCategory"], page = TempData["currentPage"] })
            @if (TempData["sortColumn"] != null && TempData["sortColumn"].ToString() == "Email")
            {
                @ViewBag.sortTag
            }
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.客戶分類)*@
            @Html.ActionLink("客戶分類", "Sort", new { columnName = "客戶分類", sort = TempData["nextSort"], sortColumn = TempData["sortColumn"], keyword = TempData["param"], CategoryId = TempData["custCategory"], page = TempData["currentPage"] })
            @if (TempData["sortColumn"] != null && TempData["sortColumn"].ToString() == "客戶分類")
            {
                @ViewBag.sortTag
            }
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.客戶名稱)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.統一編號)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.電話)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.傳真)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.地址)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.客戶類別.類別)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
        </td>
    </tr>
    }
</table>
@Html.PagedListPager(Model, page => Url.Action("PageList", new { sort = TempData["pageSort"], sortColumn = TempData["sortColumn"], keyword = TempData["param"], CategoryId = TempData["custCategory"], page }))

@section Scripts{
    <script>
        $('#custCategory').change(function () {
                    getCustCategory();
                })

        function getCustCategory() {
            var url = '@Url.Action("GetCustCategoryData")' + "?hidparam=" + encodeURIComponent($('#hidparam').val()) + "&custCategory=" + encodeURIComponent($('#custCategory').val());
                    location.href = url;
                }

        @*$('#btnExport').on("click", function () {
            alert($('#keyword').val());
            var url = '@Url.Action("GetExcelFile")' + "?hidparam=" + $('#hidparam').val() + "&hidcustCategory=" + $('#hidcustCategory').val();
            location.href = url;
        })*@

    </script>
    }

